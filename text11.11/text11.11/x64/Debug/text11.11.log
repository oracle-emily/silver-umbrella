  FileName.cpp
E:\silver-umbrella\text11.11\FileName.cpp(47,7): error C2804: 二进制“operator ==”的参数太多
E:\silver-umbrella\text11.11\FileName.cpp(47,7): error C2333: “Date::operator ==”: 函数声明中有错误；跳过函数体
E:\silver-umbrella\text11.11\FileName.cpp(71,2): error C2672: “==”: 未找到匹配的重载函数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\memory(3687,17):
      可能是“bool std::operator ==(std::nullptr_t,const std::unique_ptr<_Ty,_Dx> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(std::nullptr_t,const std::unique_ptr<_Ty,_Dx> &) noexcept”: 无法从“Date”推导出“const std::unique_ptr<_Ty,_Dx> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\memory(3681,30):
      或    “bool std::operator ==(const std::unique_ptr<_Ty,_Dx> &,std::nullptr_t) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::unique_ptr<_Ty,_Dx> &,std::nullptr_t) noexcept”: 无法从“Date”推导出“const std::unique_ptr<_Ty,_Dx> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\memory(3633,30):
      或    “bool std::operator ==(const std::unique_ptr<_Ty,_Dx> &,const std::unique_ptr<_Ty2,_Dx2> &)”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::unique_ptr<_Ty,_Dx> &,const std::unique_ptr<_Ty2,_Dx2> &)”: 无法从“Date”推导出“const std::unique_ptr<_Ty,_Dx> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\memory(1923,17):
      或    “bool std::operator ==(std::nullptr_t,const std::shared_ptr<_Ty> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(std::nullptr_t,const std::shared_ptr<_Ty> &) noexcept”: 无法从“Date”推导出“const std::shared_ptr<_Ty> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\memory(1912,17):
      或    “bool std::operator ==(const std::shared_ptr<_Ty> &,std::nullptr_t) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::shared_ptr<_Ty> &,std::nullptr_t) noexcept”: 无法从“Date”推导出“const std::shared_ptr<_Ty> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\memory(1875,17):
      或    “bool std::operator ==(const std::shared_ptr<_Ty> &,const std::shared_ptr<_Ty0> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::shared_ptr<_Ty> &,const std::shared_ptr<_Ty0> &) noexcept”: 无法从“Date”推导出“const std::shared_ptr<_Ty> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\xstring(3258,17):
      或    “bool std::operator ==(const _Elem *const ,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const _Elem *const ,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”: 无法从“Date”推导出“const _Elem *const ”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\xstring(3239,30):
      或    “bool std::operator ==(const std::basic_string<_Elem,_Traits,_Alloc> &,const _Elem *const ) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::basic_string<_Elem,_Traits,_Alloc> &,const _Elem *const ) noexcept”: 无法从“Date”推导出“const std::basic_string<_Elem,_Traits,_Alloc> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\xstring(3233,30):
      或    “bool std::operator ==(const std::basic_string<_Elem,_Traits,_Alloc> &,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::basic_string<_Elem,_Traits,_Alloc> &,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”: 无法从“Date”推导出“const std::basic_string<_Elem,_Traits,_Alloc> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\xmemory(1014,30):
      或    “bool std::operator ==(const std::allocator<_Ty> &,const std::allocator<_Other> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::allocator<_Ty> &,const std::allocator<_Other> &) noexcept”: 无法从“Date”推导出“const std::allocator<_Ty> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\iterator(488,17):
      或    “bool std::operator ==(const std::istreambuf_iterator<_Elem,_Traits> &,const std::istreambuf_iterator<_Elem,_Traits> &)”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::istreambuf_iterator<_Elem,_Traits> &,const std::istreambuf_iterator<_Elem,_Traits> &)”: 无法从“Date”推导出“const std::istreambuf_iterator<_Elem,_Traits> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\iterator(306,17):
      或    “bool std::operator ==(const std::istream_iterator<_Ty,_Elem,_Traits,_Diff> &,const std::istream_iterator<_Ty,_Elem,_Traits,_Diff> &) noexcept”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::istream_iterator<_Ty,_Elem,_Traits,_Diff> &,const std::istream_iterator<_Ty,_Elem,_Traits,_Diff> &) noexcept”: 无法从“Date”推导出“const std::istream_iterator<_Ty,_Elem,_Traits,_Diff> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\xutility(4375,5):
      或    “bool std::operator ==(const std::move_iterator<_Iter> &,const std::move_iterator<_Iter2> &) noexcept(<expr>)”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::move_iterator<_Iter> &,const std::move_iterator<_Iter2> &) noexcept(<expr>)”: 无法从“Date”推导出“const std::move_iterator<_Iter> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\xutility(1826,5):
      或    “bool std::operator ==(const std::reverse_iterator<_BidIt> &,const std::reverse_iterator<_BidIt2> &) noexcept(<expr>)”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::reverse_iterator<_BidIt> &,const std::reverse_iterator<_BidIt2> &) noexcept(<expr>)”: 无法从“Date”推导出“const std::reverse_iterator<_BidIt> &”的 模板 参数
      E:\visual STDIO\VC\Tools\MSVC\14.41.34120\include\utility(483,27):
      或    “bool std::operator ==(const std::pair<_Ty1,_Ty2> &,const std::pair<_Uty1,_Uty2> &)”
          E:\silver-umbrella\text11.11\FileName.cpp(71,2):
          “bool std::operator ==(const std::pair<_Ty1,_Ty2> &,const std::pair<_Uty1,_Uty2> &)”: 无法从“Date”推导出“const std::pair<_Ty1,_Ty2> &”的 模板 参数
  
E:\silver-umbrella\text11.11\FileName.cpp(73,5): error C2676: 二进制“==”:“Date”不定义该运算符或到预定义运算符可接收的类型的转换
